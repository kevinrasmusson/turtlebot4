import rclpy
from rclpy.node import Node
from rclpy.action import ActionServer
from nav2_msgs.action import NavigateToPose
from geometry_msgs.msg import PoseStamped

class NavigateToPoseListener(Node):
    def __init__(self):
        super().__init__('navigate_to_pose_listener')
        self._action_server = ActionServer(
            self,
            NavigateToPose,
            '/turtle/navigate_to_pose',
            execute_callback=self.execute_callback)
        self.get_logger().info("NavigateToPose listener started for namespace /turtle.")

    async def execute_callback(self, goal_handle):
        goal = goal_handle.request.pose
        self.get_logger().info(f"New navigation goal received: {goal.pose.position}")
        
        # Return an empty result since we only listen
        result = NavigateToPose.Result()
        goal_handle.succeed()
        return result


def main(args=None):
    rclpy.init(args=args)
    node = NavigateToPoseListener()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
